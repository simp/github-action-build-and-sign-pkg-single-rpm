---
name: Verify Action
on:
  push:
    branches:
      - main
      - releases/*
      - test/*

jobs:
  lint_shell:
    name: Lint shell script
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          clean: true
      - run: 'command -v shellcheck || if command -v apt-get; then sudo apt-get update; sudo apt-get install -y shellcheck; fi ||:'
      - run: 'shellcheck *.bash'


  test_action:
    name: Build & Sign
    runs-on: ubuntu-latest
    strategy:
       matrix:
         build_container:
           - 'centos8'
           - 'centos7'
         build:
           - label: 'multiple RPMs'
             path_to_build: 'tests/asset-with-multiple-packages'
             expected_rpm_count: 4
           - label: 'single RPM'
             path_to_build: 'tests/asset-with-single-package'
             expected_rpm_count: 2
           - label: 'pupmod RPM'
             path_to_build: 'tests/pupmod'
             expected_rpm_count: 2
    steps:
      - name: 'Ensure `rpm` is installed'
        run: 'command -v rpm || if command -v apt-get; then sudo apt-get update; sudo apt-get install -y rpm; fi ||:'
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          clean: true
      - uses: simp/github-action-build-and-sign-pkg-single-rpm@main
        name: 'Build & sign RPM(s) under ${{ matrix.build.path_to_build }}'
        id: build-and-sign-rpm
        with:
          gpg_signing_key: ${{ secrets.SIMP_DEV_GPG_SIGNING_KEY }}
          gpg_signing_key_id: ${{ secrets.SIMP_DEV_GPG_SIGNING_KEY_ID }}
          gpg_signing_key_passphrase: ${{ secrets.SIMP_DEV_GPG_SIGNING_KEY_PASSPHRASE }}
          path_to_build: ${{ matrix.build.path_to_build }}
          simp_builder_docker_image: 'docker.io/simpproject/simp_build_${{ matrix.build_container }}:latest'
          verbose: yes


      - name: 'Validate RPM & GPG files for ${{ matrix.build.label }}'
        env:
          rpm_file_paths: ${{ steps.build-and-sign-rpm.outputs.rpm_file_paths }}
          rpm_gpg_file: ${{ steps.build-and-sign-rpm.outputs.rpm_gpg_file }}
          expected_rpm_count: ${{ matrix.build.expected_rpm_count }}
        run: |
          [ -z "$rpm_file_paths" ] && { echo '::error ::$rpm_file_paths cannot be empty!'; exit 88; }
          files=(${rpm_file_paths})

          [ "${#files[@]}" -eq "$expected_rpm_count" ]  || \
            { echo "::error ::Expected ${expected_rpm_count} RPM files, got ${#files[@]}"; exit 88; }
          echo "Found expected number of files ($expected_rpm_count)"

          if [ ! -f "$rpm_gpg_file" ]; then
            printf '::error ::No file found at $rpm_gpg_file (got "%s")!\n' "$rpm_gpg_file"
            exit 88
          fi
          echo "Found GPG public key file: $rpm_gpg_file"

          sudo rpm --import "$rpm_gpg_file"

          for file in "${files[@]}"; do
            echo "-- $file"
            if [ ! -f "$file" ]; then
              printf '::error ::No file found at $file (got "%s")!\n' "$file"
              exit 88
            fi
            rpm -qip "$file" || { echo '::error ::Error reading RPM info from $file'; exit 88; }
            rpm_version="$(rpm -q --qf '%{RPMTAG_VERSION}' -p "$file")"
            [[ "$rpm_version" == "1.2.3" ]] || { echo "::error ::Expected RPM version '1.2.3', got '$rpm_version': $file"; exit 88; }
            echo "RPM is expected version: $file"
          done
